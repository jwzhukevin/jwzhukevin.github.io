[{"content":"虾类挑选与处理全流程指南 🦐 一、精准挑选：避开“科技虾”，锁定真鲜美 品种选择与重量参考 常见虾类平均重量： 品种 单只重量（克） 特点 基围虾 30-40 壳薄肉嫩，适合白灼、椒盐 草虾 15-20 肉质紧实，适合烧烤、油焖 斑节对虾 350-500 体型最大，适合刺身、清蒸 罗氏沼虾 200-600 头大肉多，适合蒜蓉、咖喱 小龙虾 30-100 壳硬味浓，适合麻辣、十三香 季节与产地影响： 春季基围虾肥美，秋季斑节虾饱满； 海水虾（如对虾）鲜甜，淡水虾（如罗氏虾）肉质细 鲜活虾选购四步法 察颜观色\n✅ 优质特征： 虾体青灰/青白色（海虾淡黄透亮） 虾壳坚硬有光泽，腹部绒毛洁白 ❌ 劣质预警： 暗红/发黑躯干、黏液粘连、异味刺鼻 头部发黑或泛绿（重金属/腐败标志） 触感测试\n手指按压虾腹：立即回弹＝新鲜度高 壳肉分离/软塌＝腐败变质 活力验证\n活虾尾节强韧弯曲，离水后持续弹跳 万一只能买死虾，有弹性，虾体青灰/青白色，头胸不分离为宜 冻虾/虾仁避坑指南 如果实在不方便买活虾，也可以去挑选冻虾和虾仁，看准包装标签也不会很差\n安全指标 合规特征 高危雷区 包装标签 标注“磷酸盐≤5g/kg” 模糊写“食品添加剂” 质地外观 自然淡灰/粉，冰衣薄而均匀 异常惨白或超常弹嫩 认证溯源 SC/T 3110 或 GB/T 40963 标准 无HACCP认证/溯源二维码 💡 老人儿童/肾病患者优选“无磷保水剂”产品\n🧼 二、深度清洁：去腥除污四步曲 1. 预处理 流动水冲洗表面泥沙 剪去虾须、头部尖刺（防扎伤） 盐水浸泡：500ml水+10g盐，浸泡1小时吐沙 2. 关键器官清除 部位 处理方法 危害说明 虾头 剪刀斜剪头部，挑出黑色胃囊 重金属富集区 虾线 牙签刺入背第二节，轻挑抽出 含泥沙/代谢废物 虾腮 剥开头部两侧，去羽毛状组织 过滤污染物 3. 去头去尾去壳 去头去脚： 剪刀以45°角剪去虾头，保留虾黄；\n剪除虾须和细足。\n去虾线： 牙签法：虾背第三节处插入牙签，挑出黑色肠线；\n开背法：沿虾背剪开外壳，直接剔除肠线（适合烹饪入味）。\n去壳（可选）： 剪开虾背，从头部向尾部剥离虾壳；\n保留尾部虾壳用于摆盘\n刷洗腹部褶皱、流水冲净内脏残渣\n厨房纸吸干水分（防油爆）\n❄️ 三、保鲜与嫩化：锁住鲜甜的科学技巧 短期储存（1-2天） 冷藏法：虾体撒薄盐→密封盒垫吸水纸→4℃冷藏 抑黑变秘技：淡盐水（3g盐/500ml水）浸泡10分钟 长期冷冻（1个月） 糖冻锁鲜： 虾排列于保鲜膜 撒白糖包裹 装袋急冻 原理：白糖阻隔冰晶刺破细胞\n🍳 四、烹饪保嫩诀窍 通用法则 白灼：沸水煮1分钟→冰水急冷 爆炒：热锅冷油滑炒→淋米酒增香 啤酒焖虾无腥术 锅底铺姜片+葱段 摆入处理好的虾 加半瓶清爽型啤酒 中火焖5分钟→关火焗1分钟 优势：啤酒麦芽香去腥，乙醇酯化反应提鲜\n⚠️ 五、安全禁忌 食材相克 🚫 虾 + 柿子/葡萄（间隔2小时食用） 🚫 海鲜 + 啤酒（改配干白葡萄酒） 人群慎食 痛风/过敏体质 服降压药/抗生素期间 💎 附：QA快查表 问题 专业解决方案 虾头变黑能否吃？ 剪除发黑头部，保留虾黄，这个时候就要烹饪彻底 冷冻虾仁解冻缩水？ 整袋冷水缓化 去虾线总断裂？ 虾线处理一般很难成功，挑虾线看运气，一般还是需要划开虾的整体背部（开背）来确保虾线全部去除，这样也入味 ","permalink":"https://jwzhukevin.github.io/en/posts/cooking/%E8%99%BE%E7%9A%84%E6%8C%91%E9%80%89%E5%92%8C%E5%A4%84%E7%90%86/","summary":"\u003ch1 id=\"虾类挑选与处理全流程指南\"\u003e虾类挑选与处理全流程指南\u003c/h1\u003e\n\u003ch2 id=\"-一精准挑选避开科技虾锁定真鲜美\"\u003e🦐 一、精准挑选：避开“科技虾”，锁定真鲜美\u003c/h2\u003e\n\u003ch3 id=\"品种选择与重量参考\"\u003e\u003cstrong\u003e品种选择与重量参考\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e常见虾类平均重量\u003c/strong\u003e：\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e品种\u003c/th\u003e\n          \u003cth\u003e单只重量（克）\u003c/th\u003e\n          \u003cth\u003e特点\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e基围虾\u003c/td\u003e\n          \u003ctd\u003e30-40\u003c/td\u003e\n          \u003ctd\u003e壳薄肉嫩，适合白灼、椒盐\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e草虾\u003c/td\u003e\n          \u003ctd\u003e15-20\u003c/td\u003e\n          \u003ctd\u003e肉质紧实，适合烧烤、油焖\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e斑节对虾\u003c/td\u003e\n          \u003ctd\u003e350-500\u003c/td\u003e\n          \u003ctd\u003e体型最大，适合刺身、清蒸\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e罗氏沼虾\u003c/td\u003e\n          \u003ctd\u003e200-600\u003c/td\u003e\n          \u003ctd\u003e头大肉多，适合蒜蓉、咖喱\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e小龙虾\u003c/td\u003e\n          \u003ctd\u003e30-100\u003c/td\u003e\n          \u003ctd\u003e壳硬味浓，适合麻辣、十三香\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e季节与产地影响\u003c/strong\u003e：\u003c/li\u003e\n\u003cli\u003e春季基围虾肥美，秋季斑节虾饱满；\u003c/li\u003e\n\u003cli\u003e海水虾（如对虾）鲜甜，淡水虾（如罗氏虾）肉质细\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"鲜活虾选购四步法\"\u003e鲜活虾选购四步法\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e察颜观色\u003c/strong\u003e\u003c/p\u003e","title":"虾的挑选和处理"},{"content":"开头的话 昨天给网站夜间模式添加了自己很喜欢的星空和流星，一看到这样的背景就有一种莫名的想法：如果能一直盯着这样的星空和流星，感受时间的不知不觉，也是很惬意的。\n我从小就喜欢星星。\n其实是什么事呢 我一直很少发朋友圈，现在也是，和露露解释也是说，发朋友圈就像一种主动喧闹的表达，让大家都来看看自己都发生了什么，有什么遭遇，而我很怕妨碍别人，说实话就是不适应表达，总是觉得自己要么太张扬，要么就是尴尬。\n我一直很少发朋友圈，从大学开始到现在有六年了。\n朋友圈是从大前年才问着朋友怎么打开才打开的，我大学以来都是个人的低消耗模式，封闭自己，无欲无求有点怪异，也可能是我夸张了，但是这一切在现在的我看来都是我不想要的，不知道为什么。\n当然这是底层背景，幸运的是前年开始，也就是2023年10月15号开始，命运的齿轮就开始转动了，女朋友开始打开了我的心扉，开始打开我对食物的味蕾，打开我对世界的好奇和想望。\n说实话我不想说自己有心理问题，但是我一直觉得自己是变扭的人，想表达，但是小心翼翼的外壳总是让自己的表达很孱弱。以前我也有讨厌的食物，但是对于好吃的只限于粗糙地感受它的酸甜苦辣，不会因为这些味道而有什么特别的感受，我只是更倾向于觉得自己喜欢只是因为饥饿。而且，那时候只有家乡的风景才会让我觉得开心、怀念和感动。待人接物，都是我不擅长的。\n其实说起来还好，那时候也有家乡的小伙伴和我还有联系，学校的室友也很好，浑浑噩噩不至于，但是我那时候也知道，这不是我想要的生活。\n回到朋友圈吧，到现在我朋友圈也是两次水滴筹的转发和女朋友的毕业祝福。两次转发也是女朋友提醒的。我不知道自己怎么了，我觉得自己其实还好，但是只是我自己觉得。\n这一次水滴筹的转发，我以为不会有很多人关注，出乎意料的是，很多师兄师姐，朋友，都有在表达自己的小善意。\n不知道为什么自己反而不是开心的笑，而是哭了 就是午觉醒来，进入那个水滴筹的界面，就发现有滚动提示我，我的哪些好友都通过我的转发捐赠了多少。\n心里好酸，我为自己的扑克脸和冷漠的日常表达感到羞愧了，我感叹自己，也感谢命运。\n我的那些天真的以为和自以为是，在此时此刻看来都是笑话。\n我也突然感觉，我是否错过的东西太多了，我在这个偌大的世界，终究还是孩童。\n躬身以求教，求之于境遇，也求之于自我。\n我想挣扎，不去想命运，不认为这是必然的，也不认为所发生的一切是偶然的，而是认为这是我所为所想诚然的结果。\n我想说什么呢 不瞒您说，我现在也是懵懵懂懂的人。\n我甚至怀疑过我建立这个网站的意义，好滑稽却很无奈，如今各种平台都会有十分完善的博客内容系统，你要是想，抖音、小红书、微博、b站，各种各样的平台完全可以替代过时的博客系统。\n但是做这件事我很开心，且愿意去做，就像现在我也在努力在自己的作品里面表达自己的想法一样，我在这一方面是富足的，我想表达，做自己想做且喜欢的事情。\n我希望自己打开一点，勇敢一点，活给自己看，不活给别人看，人们注定会受到一些人的讨厌，一些人的喜爱。\n这一切都不是我们能决定的，所以我会试着打开自己的心给你看，如果你偶然看到这个文章，或者受分享看到这篇文章，喜欢你可以留下的你心情和感想，不喜欢也希望你给出你的看法。\n末尾的话 难得自己花了近一个小时码字来表达自己的分享，希望未来的我看到或者你看到，或有所帮助，我是诸葛凯文，我爱这个世界！\n","permalink":"https://jwzhukevin.github.io/en/posts/life/%E9%98%B3%E5%85%89%E5%92%8C%E6%98%9F%E8%BE%B0/","summary":"\u003ch1 id=\"开头的话\"\u003e开头的话\u003c/h1\u003e\n\u003cp\u003e昨天给网站夜间模式添加了自己很喜欢的星空和流星，一看到这样的背景就有一种莫名的想法：如果能一直盯着这样的星空和流星，感受时间的不知不觉，也是很惬意的。\u003c/p\u003e","title":"阳光和星辰"},{"content":"热点精选聚合\n🐳刷新网页继续🐳\n有意栽花花满枝 本站模版来源 ","permalink":"https://jwzhukevin.github.io/en/news/","summary":"\u003cp\u003e热点精选聚合\u003c/p\u003e\n\u003cp\u003e🐳刷新网页继续🐳\u003c/p\u003e","title":"🗺️海内瞩目"},{"content":"今天用了一个下午修改了页面的特效，添加了鼠标自动变为笔的特效，有气泡拖尾，虽然这个笔不太像，然后将网页调用的樱花特效改为了本地代码实现的烟花特效，有自动消失，重力效果。\n白天 最重要的是背景特效，白天会显示太阳，纸飞机动效，底部的波浪改为了起伏的山川。\n夜晚 夜晚会显示星空和月亮，还会有随机的流星。\n这应该是我比较喜欢的样式，所以今天还是有收获的一天。\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20250526/","summary":"\u003cp\u003e今天用了一个下午修改了页面的特效，添加了鼠标自动变为笔的特效，有气泡拖尾，虽然这个笔不太像，然后将网页调用的樱花特效改为了本地代码实现的烟花特效，有自动消失，重力效果。\u003c/p\u003e","title":"Website_Building_Diary 20250526"},{"content":"为了巩固自己部署网页的能力，现在将半小时的学习结果总结一下。\n前期准备 服务器的准备 这是一开始只有基础配置的服务器：\n有基础的ssh服务，也有python包。\necho $SHELL 指令输入后，输出为：\n/bin/sh 这代表Shell类型不是bash\n输入：\nchsh -s /bin/bash # 修改默认 Shell，需重新登录生效 重新登录后，就会正常使用bash的shell，一般这个更加方便且高效。\n连接Github以拉取项目内容 本地生成公钥 一般而言使用Ed25519算法就可以，密码较短，但是这是新系统的配置，可能某些旧系统不能使用。\n输入：\nssh-keygen -t ed25519 然后就会有提示​：\n按回车使用默认路径（~/.ssh/id_ed25519）。\n设置密钥密码（可选，增强安全性）。\n生成的文件：\n私钥：~/.ssh/id_ed25519（需严格保密）\n公钥：~/.ssh/id_ed25519.pub（上传到服务器）\n上传公钥到远程服务器 ssh-copy-id -i ~/.ssh/id_ed25519.pub 用户名@服务器IP 输入远程服务器密码，公钥会自动追加到 ~/.ssh/authorized_keys。\n配置本地 SSH（可选） vim ~/.ssh/config 添加以下内容（示例）：\nHost myserver HostName 服务器IP或域名 User 用户名 Port 22 # 默认22，若修改则替换 IdentityFile ~/.ssh/id_ed25519 连接时只需输入​：\nssh myserver 禁用密码登录（增强安全）​ 这是可选项，一般不用设置，但是安全系数会因为这个提高很多。\n编辑服务器 /etc/ssh/sshd_config，添加下面的参数：\nPasswordAuthentication no PubkeyAuthentication yes 然后重启SSH服务：\nsudo systemctl restart sshd 拉取远程仓库的内容 以及提前配置本地服务器，所以只需要ssh就可以拉取内容：\ngit clone git@github.com:用户名/仓库名.git cd 仓库名 拉取当前分支最新代码 git pull origin 当前分支名 # 示例（假设分支为main）： git pull origin main 部署生产环境 安装Gunicorn pip install gunicorn 启动Gunicorn\ngunicorn -w 4 -b 0.0.0.0:8000 app:app 具体意思是：\n-w 4： 4个进程\napp:app：第一个app是app.py文件名称，第二个app是Flask实例名\n注意，第一个文件名称就是网站运行的程序，一般就是使用python3运行后可以直接在本地测试网站的程序。\n一般运行指令后：\ngunicorn -w 4 -b 0.0.0.0:8000 app:app 在浏览器访问 http://服务器IP:8000\n就会显示网站内容\n在部署 Python Web 应用（如 Flask 或 Django）时，虽然 gunicorn 可以直接处理 HTTP 请求，但结合 Nginx 反向代理是生产环境的最佳实践。\n仅仅通过gunicorn来处理，配置复杂且性能较差，不能覆盖高并发的请求，且不够安全，结合Nginx，可以提高效率和安全性。\n通过 Nginx + Gunicorn 的分工协作，既能发挥 Python 应用的处理能力，又能利用 Nginx 的高性能和安全特性，是生产部署的黄金组合。\n配置Nginx反向代理（推荐） 安装：\nsudo apt install nginx -y 编辑配置文件：\nsudo vim /etc/nginx/sites-available/database 其中database就是可自定义的配置文件名称，写入：\nserver { listen 80; server_name 你的域名或服务器IP; location / { proxy_pass http://127.0.0.1:8000; include proxy_params; } location /static/ { alias /你的项目路径/static/; } } 启用配置并重启Nginx：\nsudo ln -s /etc/nginx/sites-available/database /etc/nginx/sites-enabled/ sudo nginx -t sudo systemctl restart nginx 现在可以直接通过 http://服务器IP 访问网站。\n设置Gunicorn为系统服务（可选） 这一步主要是设置重启后网站会自动生成。\nsudo vim /etc/systemd/system/database.service 编辑文件输入：\n[Unit] Description=Database Flask app After=network.target [Service] User=你的用户名 Group=www-data WorkingDirectory=/你的项目路径/Database Environment=\u0026#34;PATH=/你的项目路径/Database/venv/bin\u0026#34; ExecStart=/你的项目路径/Database/venv/bin/gunicorn -w 4 -b 0.0.0.0:8000 app:app [Install] WantedBy=multi-user.target 其中database就是你的项目文件。\n然后：\nsudo systemctl daemon-reload sudo systemctl start database sudo systemctl enable database ngrok 内网穿透 如果你的服务器IP限制于学校、家庭等不对外开放的网络地址，到这一步你还是不能通过访问https://你的域名或服务器IP/来访问你的网站，除非学校内通过局域网还有可能访问，所以为了展示网站，一般需要内网穿透。\nfrp（Fast Reverse Proxy）是一个高性能的反向代理应用，常用于内网穿透。一般搭配公网的VPS（比如阿里云、腾讯云、搬瓦工等）作为frp服务端就可以实现高性能的穿透。但是，需要自己购买云服务，这里不考虑。\nngrok 是一个简单易用的内网穿透工具，适合临时演示和开发测试。\n最重要的是ngrok官方提供免费服务，但带宽有限，且域名是随机的，所以仅限于测试，但是操作简单且免费。\n注册ngrok账号 访问 ngrok官网，注册账号并登录。\n下载ngrok客户端 Download ngrok\n一般选择Linux版本，下载并解压。\n认证ngrok 登录ngrok官网，进入“Your Authtoken”页面，复制你的authtoken。\n在服务器上运行：\n./ngrok config add-authtoken \u0026lt;你的authtoken\u0026gt; 启动http隧道 假设你的Nginx监听80端口，运行：\n./ngrok http 80 你会看到类似输出：\nForwarding http://xxxxxx.ngrok.io -\u0026gt; http://localhost:80 Forwarding https://xxxxxx.ngrok.io -\u0026gt; http://localhost:80 外网访问 直接用浏览器访问 http://xxxxxx.ngrok.io 或 https://xxxxxx.ngrok.io，就能访问网站！\nngrok 优缺点 优点：简单、无需公网服务器、适合临时演示和开发。\n缺点：免费版带宽有限，域名随机，长期服务建议用frp或自建ngrok服务端。\n总结 安装环境 → 2. 获取代码 → 3. 虚拟环境 → 4. 安装依赖 → 5. 初始化数据库\n测试 → 7. Gunicorn部署 → 8. Nginx反代 → 9. 设置自启动 → 10.穿刺（按需）\n","permalink":"https://jwzhukevin.github.io/en/posts/code_knowledge/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2flask%E7%BD%91%E7%AB%99/","summary":"\u003cp\u003e为了巩固自己部署网页的能力，现在将半小时的学习结果总结一下。\u003c/p\u003e","title":"服务器部署Flask网站"},{"content":"前言 在静态网站中实现评论功能一直是开发者面临的挑战。传统方案如Disqus存在隐私问题和性能瓶颈，而基于GitHub生态的Giscus评论系统凭借其开源免费、数据自主、无广告等优势，成为技术博客的理想选择。本文将深入讲解如何在Hugo项目中部署Giscus，涵盖从基础配置到高级定制的完整流程。\n一、技术原理 Giscus 工作机制 ​数据存储: 使用GitHub Discussions作为评论数据库 ​身份验证: 通过GitHub OAuth实现用户登录 ​实时同步: 基于GitHub GraphQL API实现动态加载 ​SEO友好: 评论内容通过GitHub页面保持可索引性 二、前期准备 1. 配置GitHub仓库 创建公开仓库（如 username.github.io）\n启用Discussions功能：\n进入仓库设置 → Features → Discussions → 勾选 ​Enable discussions​ 创建评论分类：\n2. 安装Giscus应用 访问 Giscus 官网\n连接GitHub账户 → 选择目标仓库 → 完成安装授权\n记关键参数：\nCategory name: \u0026#34;Comments\u0026#34; Emoji: 💬 Description: \u0026#34;博文评论存储区\u0026#34; 三、Hugo项目集成 1. 模板文件配置 在 layouts/_default/single.html 中添加：\n{{ define \u0026#34;main\u0026#34; }} \u0026lt;article class=\u0026#34;post\u0026#34;\u0026gt; {{ .Content }} {{ if .Site.Params.giscus.enable }} \u0026lt;div class=\u0026#34;giscus\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://giscus.app/client.js\u0026#34; data-repo=\u0026#34;{{ .Site.Params.giscus.repo }}\u0026#34; data-repo-id=\u0026#34;{{ .Site.Params.giscus.repoId }}\u0026#34; data-category=\u0026#34;{{ .Site.Params.giscus.category }}\u0026#34; data-category-id=\u0026#34;{{ .Site.Params.giscus.categoryId }}\u0026#34; data-mapping=\u0026#34;pathname\u0026#34; data-strict=\u0026#34;0\u0026#34; data-reactions-enabled=\u0026#34;1\u0026#34; data-emit-metadata=\u0026#34;0\u0026#34; data-input-position=\u0026#34;bottom\u0026#34; data-theme=\u0026#34;{{ .Site.Params.giscus.theme }}\u0026#34; data-lang=\u0026#34;{{ .Site.Params.giscus.lang }}\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; {{ end }} \u0026lt;/article\u0026gt; {{ end }} 2. 参数配置 在 config.toml 中添加：\n[params.giscus] enable = true repo = \u0026#34;yourname/your-repo\u0026#34; # 仓库全名 repoId = \u0026#34;R_kgDOJqXxXx\u0026#34; # 仓库ID（从Giscus获取） category = \u0026#34;Comments\u0026#34; # 分类名称 categoryId = \u0026#34;DIC_kwDOJqXxXx\u0026#34; # 分类ID theme = \u0026#34;preferred_color_scheme\u0026#34; # 主题（自动适配暗黑模式） lang = \u0026#34;zh-CN\u0026#34; # 显示语言 四、样式定制 1. 基础样式调整 在 assets/css/custom.css 中添加：\n.giscus { margin: 2rem auto; max-width: 800px; } .giscus-frame { width: 100%; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); } .giscus .giscus-button { background-color: var(--primary) !important; border-color: var(--primary) !important; } 2. 暗黑模式适配 @media (prefers-color-scheme: dark) { .giscus-frame { background-color: #1a1a1a; border: 1px solid #333; } .giscus .giscus-comment { color: #e0e0e0; } } 五、高级配置 1. 多语言支持 创建 i18n/zh.yaml：\ngiscus: other: \u0026#34;评论区\u0026#34; 在模板中调用：\n\u0026lt;h2\u0026gt;{{ i18n \u0026#34;giscus\u0026#34; }}\u0026lt;/h2\u0026gt; 2. 评论审核流程 在GitHub仓库设置 → Moderation →\n开启 ​Require review for new discussions​ 配置自动标签：\n# .github/labeler.yml - label: \u0026#34;pending-review\u0026#34; if: | author().isNotMemberOf(\u0026#39;your-org\u0026#39;) \u0026amp;\u0026amp; files.includes(\u0026#39;_comments/​**​\u0026#39;) 3. 访问分析集成 \u0026lt;script\u0026gt; document.addEventListener(\u0026#39;giscus:loaded\u0026#39;, () =\u0026gt; { window.umami.trackEvent(\u0026#39;giscus-loaded\u0026#39;, { page: window.location.pathname });}); \u0026lt;/script\u0026gt; 六、故障排查 常见问题及解决方案 问题现象 可能原因 解决方案 评论框未加载 1. 仓库未公开\n2. 参数错误 检查仓库可见性\n验证repo-id格式 样式错位 CSS优先级冲突 添加 !important 强制样式 登录失败 OAuth应用未授权 重新安装Giscus应用 评论重复 pathname重复 改用 `{{ .Permalink 七、最佳实践 ​定期备份​：通过GitHub API导出评论数据\ngh api graphql -f query=\u0026#39; query { repository(owner: \u0026#34;yourname\u0026#34;, name: \u0026#34;repo\u0026#34;) { discussions(first: 100) { nodes { body createdAt author { login } } } } }\u0026#39; \u0026gt; comments_backup.json ​性能优化​：延迟加载评论组件\n\u0026lt;script defer src=\u0026#34;https://giscus.app/client.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; ​安全防护​：配置CSP策略\n[services.csp] directives = \u0026#34;script-src \u0026#39;self\u0026#39; https://giscus.app\u0026#34; 结语 通过本文的详细指导，您已成功为Hugo网站接入了现代化的Giscus评论系统。这种基于GitHub生态的解决方案不仅技术可靠，还能有效促进开发者社区的互动。建议定期关注 Giscus官方文档 获取最新功能更新。\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20250506/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e在静态网站中实现评论功能一直是开发者面临的挑战。传统方案如Disqus存在隐私问题和性能瓶颈，而基于GitHub生态的Giscus评论系统凭借其开源免费、数据自主、无广告等优势，成为技术博客的理想选择。本文将深入讲解如何在Hugo项目中部署Giscus，涵盖从基础配置到高级定制的完整流程。\u003c/p\u003e","title":"Website Building Diary-20250506"},{"content":"我只是担心哦，这个网站并没有很好的被维护，网站的很多内层代码都我都不是懂，网站还是最基础的Github托管状态，网站也没有备案，虽然本地这个博客内容都有保存，但是图片照片全在imgbb上。\n所以我就有点焦虑了，反而这也是一个提示，我该为这个网站多做一点东西了，网站本身没有很多代码，都是html的基础语言，也多亏了其本身平台hugo的功劳，所以我目前应该对他的维护改进任务就变得清晰了。\n1.理解hugo，基本的架构和逻辑。\n2.备案，对我来说可能是一个挑战，但是，我接受挑战。\n3.绑定云网址，静态网页不像目前我正在做的Flask构建的网站，它的搭建比较轻松。\n4.图片需要找到一个安全方便的储存方法，定一个方向吧，就是要在数据不丢失的情况下，安全高效的保存，我有预料应该会花一点钱。\n","permalink":"https://jwzhukevin.github.io/en/posts/life/%E4%BD%A0%E8%AF%B4%E4%B8%87%E4%B8%80%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E4%B8%8D%E5%9C%A8%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E/","summary":"\u003cp\u003e我只是担心哦，这个网站并没有很好的被维护，网站的很多内层代码都我都不是懂，网站还是最基础的\u003ccode\u003eGithub\u003c/code\u003e托管状态，网站也没有备案，虽然本地这个博客内容都有保存，但是图片照片全在\u003ca href=\"https://imgbb.com/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\" \u003eimgbb\u003c/a\u003e上。\u003c/p\u003e","title":"你说万一这个网站不在了怎么办"},{"content":"🥒凉拌什锦素菜制作教程 🛒 食材准备 ​核心食材：黄瓜1根、香菜50g、腐竹80g(干)、油炸$花生米$50g、黑木耳15g(干) ​推荐辅料：胡萝卜半根、小米辣3根、白芝麻1勺、蒜末2勺、葱花1勺 ​灵魂料汁： 生抽3勺 + 香醋2勺（黄金酸咸比例） 白糖1勺（平衡酸味） 辣椒粉1勺 + 花椒油1勺（增香关键） 香油/芝麻油1勺（提升口感） 蚝油1勺（鲜味加持） 🔪 制作步骤 一、食材预处理 ​干货泡发\n腐竹/黑木耳提前2小时冷水泡发（温水加速但影响口感） 腐竹切段，黑木耳撕小朵备用 ​蔬菜处理\n黄瓜拍裂切滚刀块（释放清香） 胡萝卜切细丝（增加色彩层次） 香菜保留嫩茎切段 ​关键操作\n腐竹/黑木耳焯水1分钟（去生豆腥味） 花生米现炸或使用市售熟花生（保持酥脆） 二、秘制料汁 ​油泼激发\n碗中放蒜末+葱花+辣椒粉+白芝麻，淋2勺热油 ​调味融合\n依次加入生抽、香醋、白糖等调料搅拌至糖融化 三、组合拌制 ​食材装盘\n混合黄瓜+腐竹+黑木耳+胡萝卜丝 ​灵魂注入\n浇料汁后撒花生米+香菜 戴手套抓拌更入味（比筷子搅拌效率高3倍） ​冷藏升华\n密封冷藏30分钟（每10分钟翻拌一次） 💡风味升级秘籍 ​口感层次：加1勺芝麻酱（参考凉拌麻酱宽粉做法） ​果香创意：挤入半个柠檬汁或加百香果肉 ​低卡版本：用0卡糖代替白糖，橄榄油替代部分香油 🌟 小贴士：花生米最后撒可保持酥脆，腐竹泡发时压重物防浮起\n","permalink":"https://jwzhukevin.github.io/en/posts/cooking/%E5%87%89%E6%8B%8C%E8%8F%9C/","summary":"\u003ch1 id=\"凉拌什锦素菜制作教程\"\u003e🥒凉拌什锦素菜制作教程\u003c/h1\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/VWgjBh1S/faed26e058e59b1a32edcdc09c485e58.jpg\" alt=\"1\"  /\u003e\n\u003c/p\u003e\n\u003ch2 id=\"-食材准备\"\u003e🛒 食材准备\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e​\u003cstrong\u003e核心食材\u003c/strong\u003e：黄瓜1根、香菜50g、腐竹80g(干)、油炸$花生米$50g、黑木耳15g(干)\u003c/li\u003e\n\u003cli\u003e​\u003cstrong\u003e推荐辅料\u003c/strong\u003e：胡萝卜半根、小米辣3根、白芝麻1勺、蒜末2勺、葱花1勺\u003c/li\u003e\n\u003cli\u003e​\u003cstrong\u003e灵魂料汁\u003c/strong\u003e：\n\u003cul\u003e\n\u003cli\u003e生抽3勺 + 香醋2勺（黄金酸咸比例）\u003c/li\u003e\n\u003cli\u003e白糖1勺（平衡酸味）\u003c/li\u003e\n\u003cli\u003e辣椒粉1勺 + 花椒油1勺（增香关键）\u003c/li\u003e\n\u003cli\u003e香油/芝麻油1勺（提升口感）\u003c/li\u003e\n\u003cli\u003e蚝油1勺（鲜味加持）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"-制作步骤\"\u003e🔪 制作步骤\u003c/h2\u003e\n\u003ch3 id=\"一食材预处理\"\u003e一、食材预处理\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e​\u003cstrong\u003e干货泡发\u003c/strong\u003e\u003c/p\u003e","title":"凉拌菜"},{"content":"🌶️ 酸辣无骨鸡爪制作教程 🛒食材准备（2-3人份） ​主料​：鸡爪500克（选择肉质饱满、颜色米白的新鲜鸡爪） ​辅料​： 柠檬1个（切片，去籽防苦） 小米辣5-10个（切圈，根据辣度调整） 蒜瓣5-8瓣（剁成蒜末，喜欢蒜香可以多加，多加多少不知道，不好吃不怪我哦） 香菜2根（切段） 洋葱半颗（切丁或薄片） 生姜5片（焯水去腥） ​调料​： 生抽 4-5勺（提鲜） 白醋/米醋/陈醋 3-5勺（酸味来源） 白糖1-2勺（平衡酸辣，提鲜） 盐1小勺（基础调味） 蚝油1勺（可选） 花椒油/辣椒油1勺（增香） 泡椒水3勺（爱吃可以加） 冰块1盆（冰镇鸡爪用） 🔪 制作步骤 一、处理鸡爪 ​预处理：剪指甲后冷水浸泡20分钟去血水 ​焯煮：冷水下锅加葱段、姜片、料酒、花椒（家里有最好），煮沸撇浮沫后煮8-12分钟（筷子可轻松插入即熟，不用太刻意，第一次肯定不会太完美） ​冰镇：捞出立即投入冰水浸泡20分钟，肉质更Q弹 ​冷冻：擦干后冷冻40分钟（方便去骨且保持形态） 二、去骨技巧 ​划刀：用尖头刀沿鸡爪背部每条趾骨划开至骨头 ​分离关节：弯折主骨与其他趾骨连接处，扭动拔出主骨 ​修剪趾骨：厨房剪刀贴骨剪开，剔除残留小骨 三、灵魂调味 ​混合酱汁：将所有调料+柠檬片（挤汁后放入）搅拌均匀 ​腌制：酱汁与鸡爪充分抓匀，冷藏至少2小时（4到6小时差不多，过夜更入味） 小建议：有条件可以途中翻动几次确保均匀腌制（你要是有耐心） 💡美味升级贴士 ​口感优化： 加百香果果肉提升果香层次 用雪碧代替凉白开增添清爽感 加苹果泥可以提升自然风味和口感 ​创意变式：泡椒柠檬味（加泡椒水）、蒜香风味（加倍蒜末） ​健康提示： 控制胆固醇摄入量 使用新鲜食材并注意操作卫生 ✨ 小贴士：去骨耗时可用现成无骨鸡爪替代，但自制更卫生实惠。\n🌟 酸辣无骨鸡爪终极总结 🔥 成功关键 ​冰火两重天​：焯水后冰镇+冷冻预处理，双重锁住Q弹口感 （煮8-12分钟+冰水浸泡20分钟，去骨前冷冻40分钟更易操作）\n​酸辣黄金配比​：\n✅ 基础公式：生抽:醋:糖=5:3:1（可随雪碧/苹果泥调整酸甜度）\n✅ 灵魂三件套：柠檬汁+泡椒水+花椒油，酸辣鲜香全到位\n🧤 懒人必看 去骨神器：厨房剪刀贴骨剪开比徒手剥离效率高3倍 应急方案：现成无骨鸡爪替代（建议再焯水去防腐剂） 💥 口感爆点 ​果香炸弹​：加百香果/柠檬片/苹果泥，果酸比纯醋更柔和 ​气泡魔法​：雪碧代替水腌制，清爽感直击味蕾（冷藏后更绝！） ⏰ 时间管理 最短尝鲜：冷藏2小时（适合急性子） 最佳风味：隔夜腌制（酸辣渗透肌理，连骨头缝都入味） 🚨 避雷指南 苦味预警：柠檬籽必须剔除！苹果泥氧化发黑需当天食用 软烂陷阱：煮超12分钟会失去弹牙感，宁可少煮勿过火 🎨 创意玩法 风味流派 核心配方 适配场景 泡椒柠檬派 泡椒水+青花椒+柠檬皮屑 下酒追剧 蒜香暴击流 加倍蒜末+洋葱泥+香油 烧烤夜宵搭档 果香小清新 百香果+话梅+薄荷叶 野餐冷盘 💡 终极秘籍：鸡爪焯水时加1勺啤酒，腥味去无踪，胶质更透亮\n","permalink":"https://jwzhukevin.github.io/en/posts/cooking/%E9%85%B8%E8%BE%A3%E6%97%A0%E9%AA%A8%E9%B8%A1%E7%88%AA/","summary":"\u003ch1 id=\"-酸辣无骨鸡爪制作教程\"\u003e🌶️ 酸辣无骨鸡爪制作教程\u003c/h1\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/FkcWpMz2/OIP-C.jpg\" alt=\"鸡爪\"  /\u003e\n\u003c/p\u003e","title":"酸辣无骨鸡爪"},{"content":"SSH（Secure Shell）是 Linux 系统中广泛使用的远程连接和管理工具，它以安全性高、操作灵活著称。\n一、SSH 的核心作用 ​加密通信\n所有传输数据（包括密码）均通过加密通道传输，避免被中间人窃听，相比 Telnet、FTP 等明文协议更安全。\n​远程登录与命令执行\n通过 ssh user@hostname 登录远程服务器，或直接执行单条命令（如 ssh user@host \u0026quot;ls /tmp\u0026quot;）。\n​文件传输\n配合 scp 或 sftp 实现加密的文件传输：\nscp file.txt user@remote:/path/to/dest # 上传文件 scp user@remote:/path/file.txt ./ # 下载文件 ​二、安装与基础配置 ​安装 SSH\n大多数 Linux 发行版默认安装 OpenSSH 服务端（sshd）和客户端（ssh）。若无，可通过包管理器安装：\nsudo apt install openssh-server # Debian/Ubuntu sudo yum install openssh-server # CentOS/RHEL ​启动与检查服务\nsudo systemctl start sshd # 启动服务 sudo systemctl enable sshd # 设置开机自启 sudo systemctl status sshd # 检查运行状态 ​默认配置路径\n服务端配置：/etc/ssh/sshd_config 客户端配置：/etc/ssh/ssh_config 或用户目录的 ~/.ssh/config ​三、安全加固建议 ​禁用密码登录，使用密钥认证\n# 生成密钥对（默认保存到 ~/.ssh/id_rsa） ssh-keygen -t rsa -b 4096 # 将公钥上传到远程服务器 ssh-copy-id user@remote_host 在 config 中修改：\nHost xxxxx # 自定义别名（如：prod、dev等） HostName xxxxxxxxxx # 远程主机IP或域名 User xxxxx # 远程用户名 Port 22 # SSH端口（默认22可省略） IdentityFile ~/.ssh/xxxxxx # 指定私钥 ServerAliveInterval 120 PubKeyAcceptedKeyTypes +ssh-rsa 在 config 中修改：\nPasswordAuthentication no # 禁用密码登录 PubkeyAuthentication yes # 启用密钥认证 ​修改默认端口（22）​\nPort 2222 # 避免自动化攻击 需同步更新防火墙规则：\nsudo ufw allow 2222/tcp ​限制 root 登录\nPermitRootLogin no ​启用 Fail2Ban\n自动封禁多次登录失败的 IP，防止暴力破解。\n​四、高级功能 ​端口转发（隧道）​\n​本地端口转发​（访问远程内网服务）：\nssh -L 本地端口:目标地址:目标端口 user@remote_host ​远程端口转发​（暴露本地服务到公网）：\nssh -R 远程端口:本地地址:本地端口 user@remote_host ​代理跳板（Jump Host）​\n通过中转服务器连接内网主机：\nssh -J user@jump_host user@internal_host ​长连接保持\n在 ~/.ssh/config 中配置避免连接超时：\nHost * ServerAliveInterval 60 ServerAliveCountMax 3 ​五、常见问题排查 ​连接被拒绝（Connection Refused）​\n检查 sshd 服务是否运行：systemctl status sshd 确认端口是否开放：sudo ss -tulnp | grep sshd ​认证失败（Permission Denied）​\n确认公钥已正确上传到 ~/.ssh/authorized_keys 检查文件权限：chmod 700 ~/.ssh \u0026amp;\u0026amp; chmod 600 ~/.ssh/* ​连接超时\n检查防火墙或安全组是否放行 SSH 端口 使用 -v 参数查看详细日志：ssh -v user@host ​六、替代工具 ​Mosh：基于 UDP，适合网络不稳定的环境（如移动设备）。 ​Telnet：明文协议，仅建议用于测试环境。 ​Web 控制台：如云服务商提供的网页终端（AWS EC2、阿里云等）。 通过合理配置，SSH 可以成为既安全又高效的远程管理工具。建议定期更新 OpenSSH 版本以修复潜在漏洞，并遵循最小权限原则分配用户访问权限。\n","permalink":"https://jwzhukevin.github.io/en/posts/code_knowledge/ssh%E8%BF%9E%E6%8E%A5/","summary":"\u003cp\u003eSSH（Secure Shell）是 Linux 系统中广泛使用的远程连接和管理工具，它以\u003cstrong\u003e安全性高、操作灵活\u003c/strong\u003e著称。\u003c/p\u003e","title":"SSH连接"},{"content":"权限的各种数字代码 到目前为止，我经常遇到chmod指令后面添加权限的命令，比如500、700、755等等，还有比如+x、+w等字母的命令，各种各样，这样的权限我本来是不理解的，但是，一旦你真正在控制文件的权限后才会慢慢懂得这是科学管理很智慧的设定。\n我问了我全能的DeepSeek，于是，我就有了更多的答案和知识，接下来就用我所学，尽量讲清楚权限的哪些事。\n权限的种类 一般而言权限分为下面几种\n权限类型 文件操作影响 目录操作影响 二进制位 八进制值 读 (r) 查看文件内容 列出目录内容 100 4 写 (w) 修改/截断文件 创建/删除文件 010 2 执行 (x) 作为程序执行 进入目录 001 1 📌 ​重要规则：目录的w权限必须配合x权限才能生效\n从二进制到八进制的变化其实就可以让我们更好的理解之前每个数字的意思，但是其实还需要理解三个数字排列起来是什么用意。\n在任一个文件夹里面，输入：\nls -l 就会出现：\n-rwxr-xr-- -rwxrwxrwx drwxrwxrwx drwxrwxrwx 这样的字眼代表其中三种权限，如下是第一个权限的详细图示\n- rwx r-x r-- → 用户权限 | 组权限 | 其他用户权限 │ │ │ │ │ │ │ └─ 其他用户：可读 │ │ └─ 组用户：可读+执行 │ └─ 文件所有者：完全权限 └─ 文件类型（-表示普通文件） 分析步骤 ​识别文件类型：\n​首字符表示文件类型： d：目录 -：普通文件 示例：.gitignore是普通文件，archetypes是目录。 ​解析权限：\n​权限字段​（如rwxrwxrwx）分为三组： 用户（所有者）、组、其他用户的rwx权限。 示例：rwxrwxrwx对应数字权限777，表示所有用户有完全控制权。 权限的一般设置 权限三种类型也代表了三个递进的权限管理，具体如下表\n操作需求 所需权限 示例代码 仅查看文件名 r-- chmod 444 dir/ 创建/删除文件 wx chmod 300 dir/ 完整目录控制 rwx chmod 700 dir/ 他们具体和数字的关系如下表\n权限组合 二进制 计算过程 符号表示 典型场景 0 000 0+0+0 --- 完全禁止访问 4 100 4+0+0 r-- 只读配置文件 5 101 4+0+1 r-x 可执行脚本通用权限 6 110 4+2+0 rw- 日志文件标准权限 7 111 4+2+1 rwx 开发环境临时目录 2 010 0+2+0 -w- 特殊写入权限（需配合x） 3 011 0+2+1 -wx 上传目录基础权限 例子 这里尽量把所有高频出现的权限设置讲清楚：\n一、符号权限模式详解 1. 基础权限组合表 数字代码 符号表示 权限说明 典型应用场景 ​0 --- 无任何权限 敏感文件临时锁定 ​400 r-------- 仅所有者可读 个人加密文件 ​500 r-x------ 所有者读+执行 私有可执行脚本 ​600 rw------- 所有者读写 SSH密钥文件（~/.ssh/id_rsa） ​644 rw-r--r-- 所有者读写，其他只读 Web静态文件（HTML/CSS/JS） ​700 rwx------ 所有者完全控制 用户家目录（~） ​750 rwxr-x--- 所有者完全控制，组可读执行 团队共享工具目录 ​755 rwxr-xr-x 所有者完全控制，其他读执行 公共可执行程序（/usr/bin） ​777 rwxrwxrwx 所有用户完全控制 ​高危！仅用于临时调试 2. 特殊权限组合 数字代码 符号表示 特殊权限说明 应用场景 ​1777 rwxrwxrwt 粘滞位+完全权限 公共上传目录（/tmp） ​2750 rwxr-s--- SGID+标准权限 团队协作目录（文件继承属组） ​4755 rwsr-xr-x SUID+标准权限 特权命令（/usr/bin/passwd） 二、符号权限模式详解 1. 基础操作语法 chmod [角色][操作符][权限] 文件 角色标识：\nu：文件所有者(user) g：同组用户(group) o：其他用户(other) a：所有用户(all，默认) ​操作符：\n+ 添加权限 - 移除权限 = 精确设置权限 ​权限标识：\nr：读 w：写 x：执行 X：智能执行（仅对目录/已有x权限的文件生效） 2. 常用操作示例 命令示例 权限变化说明 应用场景 chmod +x script.sh 所有用户添加执行权限 使脚本可执行 chmod u=rw,go= file 所有者读写，其他无权限 私有配置文件 chmod go-w .bashrc 移除组和其他用户的写权限 防止用户配置文件被篡改 chmod a=rwx shared/ 设置目录为完全开放权限 ​高危！仅用于临时共享目录 chmod -R o-rwx data/ 递归移除其他用户所有权限 保护敏感数据目录 chmod g+s project/ 启用SGID权限 团队项目目录文件继承组权限 3. 高级组合用法 # 允许组用户协同编辑（保留原有权限） chmod g+w,o= shared_doc.txt # 智能设置执行权限（仅对目录和可执行文件生效） chmod -R a+X bin/ # 精确权限控制（所有者：rwx，组：rx，其他：无） chmod u=rwx,g=rx,o= app # 粘滞位设置（防止用户互删文件） chmod +t /var/public_uploads/ 三、典型场景对照表 1. Web服务器场景 文件类型 推荐权限 符号表示 设置命令 PHP脚本 644 rw-r--r-- chmod 644 index.php 上传目录 1770 rwxrwx--T chmod 1770 uploads/ 日志文件 640 rw-r----- chmod 640 access.log SSL证书 400 r-------- chmod 400 ssl.key 2. 开发环境场景 文件类型 推荐权限 符号表示 设置命令 Python脚本 755 rwxr-xr-x chmod +x main.py 配置文件 600 rw------- chmod u=rw,go= config 测试目录 775 rwxrwxr-x chmod 775 test/ 编译产物 644 rw-r--r-- chmod a-w build/*.o 3. 系统管理场景 文件类型 推荐权限 符号表示 设置命令 定时任务脚本 750 rwxr-x--- chmod 750 /etc/cron.d/ 系统日志 640 rw-r----- chmod g+r /var/log/ 特权工具 4750 rwsr-x--- chmod u+s,go=rx sudoer 临时文件 1777 rwxrwxrwt chmod +t /tmp/ 四、危险权限警示表 危险权限 风险示例 安全建议 ​777 攻击者可植入恶意脚本 使用755并设置合适所有权 ​666 配置文件可能被任意篡改 设置为600并限制组访问 ​4777 SUID程序可能被提权利用 审计系统所有SUID/SGID文件 ​000 可能造成服务不可用 最低设置为444（只读） 五、最佳实践原则 ​目录权限黄金法则\n# 常规目录权限设置公式 chmod 755 /path/to/dir # 公共可读目录 chmod 750 /path/to/secure # 受保护目录 ​文件权限安全基线\n# 配置文件安全模板 chmod 600 /etc/conf_file # 私有配置 chmod 644 /var/readonly # 公共只读文件 ​递归权限设置警告\n# 危险操作！可能破坏系统权限 chmod -R 777 / # 绝对禁止！ # 安全递归设置示例 find . -type d -exec chmod 755 {} \\; # 仅修改目录 find . -type f -exec chmod 644 {} \\; # 仅修改文件 ","permalink":"https://jwzhukevin.github.io/en/posts/code_knowledge/linux%E7%B3%BB%E7%BB%9F%E9%87%8C%E9%9D%A2%E7%9A%84%E6%9D%83%E9%99%90/","summary":"\u003ch1 id=\"权限的各种数字代码\"\u003e权限的各种数字代码\u003c/h1\u003e\n\u003cp\u003e到目前为止，我经常遇到\u003ccode\u003echmod\u003c/code\u003e指令后面添加权限的命令，比如\u003ccode\u003e500\u003c/code\u003e、\u003ccode\u003e700\u003c/code\u003e、\u003ccode\u003e755\u003c/code\u003e等等，还有比如\u003ccode\u003e+x\u003c/code\u003e、\u003ccode\u003e+w\u003c/code\u003e等字母的命令，各种各样，这样的权限我本来是不理解的，但是，一旦你真正在控制文件的权限后才会慢慢懂得这是科学管理很智慧的设定。\u003c/p\u003e","title":"Linux系统里面的权限"},{"content":"今天解决了本地提交的问题，就是不再使用网页端提交代码，使用SSH密钥，自己也写了两个提交脚本，一个日常提交sub_soft.sh，一个强制重启提交sub_hard.sh，应对本地很仓库冲突的问题，保留本地，清楚仓库。\n脚本格式如下： sub_soft.sh:\n#!/bin/bash # 生成静态文件前清理旧数据（确保每次都是全新构建） hugo --minify cd public # 添加所有文件到暂存区 git add . # 检查是否有文件变更（避免空提交） if git diff-index --quiet HEAD --; then echo \u0026#34;No changes to deploy.\u0026#34; exit 0 fi # 获取源码仓库信息（显式指定源码目录，避免跨文件系统问题） SOURCE_REPO_DIR=\u0026#34;/mnt/d/Hugo/Myblog/kevin\u0026#34; COMMIT_HASH=$(git -C \u0026#34;$SOURCE_REPO_DIR\u0026#34; rev-parse --short HEAD) BRANCH_NAME=$(git -C \u0026#34;$SOURCE_REPO_DIR\u0026#34; rev-parse --abbrev-ref HEAD) REPO_NAME=$(basename \u0026#34;$SOURCE_REPO_DIR\u0026#34;) TIMESTAMP=$(date +\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;) # 提交到部署仓库 git commit -m \u0026#34;Deploy: ${REPO_NAME}@${BRANCH_NAME}:${COMMIT_HASH} (${TIMESTAMP})\u0026#34; # 推送 git push origin master sub_hard.sh:\n#!/bin/bash # 生成静态文件前清理旧数据（确保每次都是全新构建） rm -rf public hugo --minify cd public # 初始化或复用 Git 仓库 if [ -d \u0026#34;.git\u0026#34; ]; then echo \u0026#34;Reusing existing Git repository.\u0026#34; else git init fi # 配置 Git 用户信息（必填，否则提交失败） git config user.email \u0026#34;xxxxxxxx\u0026#34; git config user.name \u0026#34;xxxxxxxx\u0026#34; # 添加所有文件到暂存区 git add . # 检查是否有文件变更（避免空提交） if git diff-index --quiet HEAD --; then echo \u0026#34;No changes to deploy.\u0026#34; exit 0 fi # 获取源码仓库信息（显式指定源码目录，避免跨文件系统问题） SOURCE_REPO_DIR=\u0026#34;/mnt/d/Hugo/Myblog/kevin\u0026#34; COMMIT_HASH=$(git -C \u0026#34;$SOURCE_REPO_DIR\u0026#34; rev-parse --short HEAD) BRANCH_NAME=$(git -C \u0026#34;$SOURCE_REPO_DIR\u0026#34; rev-parse --abbrev-ref HEAD) REPO_NAME=$(basename \u0026#34;$SOURCE_REPO_DIR\u0026#34;) TIMESTAMP=$(date +\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;) # 提交到部署仓库 git commit -m \u0026#34;Deploy: ${REPO_NAME}@${BRANCH_NAME}:${COMMIT_HASH} (${TIMESTAMP})\u0026#34; # 强制推送到 GitHub Pages 分支 git remote rm origin 2\u0026gt;/dev/null || true git remote add origin git@github.com:xxxxxxxx/xxxxxxxx.git git push -f origin master 其中，第二个脚本是暴力重置，包含了一些本地的信息，所以用xxxxxxxx代替的，包括了本地用户名和邮箱，我都的GitHub账号和网站仓库名称。\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20250312/","summary":"\u003cp\u003e今天解决了本地提交的问题，就是不再使用网页端提交代码，使用SSH密钥，自己也写了两个提交脚本，一个日常提交\u003ccode\u003esub_soft.sh\u003c/code\u003e，一个强制重启提交\u003ccode\u003esub_hard.sh\u003c/code\u003e，应对本地很仓库冲突的问题，保留本地，清楚仓库。\u003c/p\u003e","title":"Website Building Diary-20250312"},{"content":"开头是想说网站的构建确实停了好久了，因为一直都比较忙，长大了才知道事情做不完的感觉，很压抑，还好自己能保有一点点的兴趣。\n开头唠一唠 我目前在学习使用Flask构建小型的数据库，用闲暇时间折腾了一周，被各种软件的版本折磨，可能这就是DeepSeek下还想急功近利的后果吧，写代码不知其所以然很难修改报错和版本冲突以及语法弃用的问题，一问一个不知道，问了才知道懂得太少了，没有AI我将寸步难行，实话如此。\n唠叨完了，我还是想在目前的网页基础上添加一下新功能。\n评论区 一开始试过很多方法，但是免费的方法都行不通，成功过一次，就是试用一天就没了，到时候回去看看有没有新方法，对了，还没问过DeepSeek，也该问问有什么好的方法了。\n个性化 希望你读到这篇日记我的网站和示例网站已经千差地别了，我目前的网页框架都是示例网站的模样，骨架一样，我只是在换血肉，我目前也开始学了一些HTML和Jinja2的知识，希望可以在此基础上自己就着DeepSeek一起修改一下。\n其实 其实就是刚刚被flask折磨得很难受，想早点下班，老师刚刚才找我，我立马回去不太好，就更新一下日记。\n今天天气预报会下雨，早点回去，希望不会被淋。\n我是jwzhukevin，我爱这个世界。\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20250311/","summary":"\u003cp\u003e开头是想说网站的构建确实停了好久了，因为一直都比较忙，长大了才知道事情做不完的感觉，很压抑，还好自己能保有一点点的兴趣。\u003c/p\u003e","title":"Website Building Diary-20250311"},{"content":"开门见山\n软件的官网有资料可以查询FPLO，本人目前查到的资料有FPLO14.00版本的新手指导，Use of FPLO and Quanty to perform ab-initio ligand field multiplets calculations，之后查到会陆续加上。\n总而言之，这个软件是商用的，我并没有在网络上查到太多的教程和相关的信息。相对于VASP，肯定信息会少很多，不主流但是会好用很多。有操作界面，在有第一性计算的基础上上手很简单。\nNEW 新建你的项目，我的操作系统是ubantu，也就是Linux系统。\nmkdir new 进入文件内\ncd new 打开设置界面，也就是熟悉的软件操作界面\nfedit22.00-62-x86_64 ！！！要注意的是fedit指令后面接的是软件的版本和操作的系统。\nfedit：软件名称 ​22.00：版本，通常主版本号和次版本号的结构，比如22.00可能代表主版本22，次版本00 ​62：构建号或补丁号，表示该版本的第62次构建，或者补丁版本号 ​x86_64：系统架构，适用于64位的x86架构处理器 所以，了解自己的情况再想想怎么输入指令，或者，你知道Linux系统下按Tab键可以自动补全。\n之后就会弹出一个操作界面，高效简洁。\n键盘点击字母（不分大小写）X即可进入参数设置。\nSCF 这是静态计算，我认为是在得到一个物质结构之后的重要一步计算，通常在此之前会经过结构优化（relax），针对实际的实验数据的话就不需要结构优化了。\n接着介绍，之前我们来到了参数界面。键盘输入加号键会进入Symmetry界面：\n界面里面就可以设置结构的基本参数。\n注意，每一次改变结构后，都需要输入加号刷新保存：\n之后按X，X，退回主界面，输入减号进入选项卡，就是计算时候的选项设置：\n一般只需要勾选不考虑对称性。\n之后按X，退出，按Q之后选择Y，退出主界面。\n运行的格式是：\nfplo22.00-62-x86_64 \u0026gt; out_scf.dat \u0026amp; fplo22.00-62-x86_64 \u0026gt; out_scf.dat 第一个格式代表提交任务，输出信息不回在终端展示，类似于脚本的运行逻辑。\n第二个就是正常的运行指令。\nBANDSTRUCTURE 能带计算需要勾选设置\n回到主界面：\n按下空格：\n可以看到底端出现了选项，收入B，进入能带计算设置界面： 按你自己的要求输入，输入B就是打开能带绘制，输入W就是打开轨道权重，同样输入X退出，输入Q退出主界面，输入Y选着保存设置。\n顺便提醒，在主界面：\n还有一个菜单设置界面，即直接输入B，就会弹出：\n能带计算和静态计算一样，输入：\nfplo22.00-62-x86_64 \u0026gt; out_bandstructure.dat \u0026amp; fplo22.00-62-x86_64 \u0026gt; out_bandstructure.dat 就可以进行运算。\nWANNIER 这一步需要特定的脚本来实现，不是很复杂，但是碍于脚本私有，暂时不能分享。\n","permalink":"https://jwzhukevin.github.io/en/posts/tools/fplo-software-beginner-tutorial/","summary":"\u003cp\u003e开门见山\u003c/p\u003e\n\u003cp\u003e软件的官网有资料可以查询\u003ca href=\"https://www.fplo.de/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\" \u003eFPLO\u003c/a\u003e，本人目前查到的资料有\u003ca href=\"https://www.fplo.de/wp-content/uploads/2018/01/getting_started.pdf\" target=\"_blank\" rel=\"noopener nofollow noreferrer\" \u003eFPLO14.00版本的新手指导\u003c/a\u003e，\u003ca href=\"https://www.quanty.org/_media/workshop/heidelberg/october_2019/dfttomlft.pdf\" target=\"_blank\" rel=\"noopener nofollow noreferrer\" \u003eUse of FPLO and Quanty to perform ab-initio ligand field multiplets calculations\u003c/a\u003e，之后查到会陆续加上。\u003c/p\u003e","title":"FPLO"},{"content":"2024就剩下一两天了，我也是一个月来都没有上传博客了\n这一年在科研上最大的进步都集中在暑假过后，也就是这研二下上学期\n主要学习的内容是\n紧束缚理论下使用哈密顿矩阵绘制能带图 主要包括紧束缚理论的学习，面心立方哈密顿矩阵的绘制，python代码绘图\nVASP进行能带图的绘制 主要包括：\n四个输入文件的学习，INCAR、POSCAR、POTCAR、KPOINTS\n绘制能带图的三个基础步骤，结构优化，静态计算，能带绘制（暂时还没有学习DOS图的绘制，但是感觉很有必要学）\n认识主要的输出文件，CONTCAR、DOSCAR、PROCAR等等\nWannier90的使用 主要用来推导紧束缚模型的工具\n主要包括输入文件和输出文件的认识\n特别是wannier90_hr.dat文件的作用\nWannierTools的使用 主要是针对Bi2Se3，计算其Z2拓扑数，表面态，能带，表面自旋纹理等等\n使用python编程计算表面态和表面自旋纹理 这个费的时间很长，因为需要了解slab和表面态的概念，并且了解其哈密顿量的表示，所以前前后后花了俩个多月，比较菜\n目前在计算反向霍尔电导率的横向霍尔电导 ","permalink":"https://jwzhukevin.github.io/en/posts/notes/2024%E7%A7%91%E7%A0%94%E5%B0%8F%E8%AE%B0/","summary":"\u003cp\u003e2024就剩下一两天了，我也是一个月来都没有上传博客了\u003c/p\u003e","title":"2024"},{"content":"材料科学与工程专业硕士研究生，专注于非线性霍尔效应研究和材料数据库开发\u0026hellip;\n🐳刷新网页继续阅读🐳\n个人简介\n姓名： 朱佳文 性别： 男 民族： 汉族 年龄： 24岁 籍贯： 江西萍乡 联系电话： 15179954812 邮箱： zhujiawen@mail.ustc.edu.cn 求职意向： 应届生\n教育经历\n🎓 中国科学技术大学 (2023.09 - 2026.06) 学历： 材料物理与化学 硕士 学院： 材料科学与工程学院 地点： 安徽合肥 录取方式： 推免 研究方向： 利用VASP和FPLO等软件，进行高通量计算，研究非线性霍尔效应，并搭建数据库网站。\n🎓 东北大学 (2019.09 - 2023.06) 学历： 材料成型及控制工程 本科 学院： 材料科学与工程学院 地点： 辽宁沈阳 GPA： 3.54/4.0（17/120，专业前15%） 相关课程： 材料科学基础（95）、材料力学（95）、金属凝固理论（93）、传输原理（91）、复合材料学（96）\n研究和项目经历\n🔬 非线性霍尔效应的高通量计算和数据库开发 (2024.09) 角色： 研究生课题 描述： 认识材料数据库网站涵盖1000多个材料进行材料本征性质的计算，分析材料用于大数据技术的潜力，并将所有计算结果呈现在个人搭建的数据库网站上，下一步准备进行机器学习分析。 数据库网址： http://www.phonon.synl.ac.cn/\n🔬 白光照明用掺铒乙酸石墨烯膜制备与性能研究 (2021.03 - 2022.09) 角色： 项目组主要成员 · 大学生创新创业项目 描述： 本项目以YAG:Ce荧光薄膜材料为主要研究对象，通过添加不同比例的BaF2为助剂助熔剂，实现YAG:Ce荧光薄膜的常规结构调控，制备出具有高效致密度、高发光强度的薄膜。\n竞赛经历\n🏆 2022中国大学生机械工程创新创业大赛材料热处理创新创业赛国家一等奖 (2022.04 - 2022.08) 角色： 主力队员 成果： 主要研究含金成分添加时间效制度来研究铸造Al-Si-Mg合金高温短时效强化\n🥈 第五届辽宁省普通高等学校本科大学生材料成型工艺创新竞赛一等奖 (2022.05 - 2022.09) 角色： 主力人员 · 沈阳 成果： BRT客车扶手的系统设计，负责扶手的结构设计、力学模拟以及大部分说明书的编写\n🥉 第四届辽宁省普通高等学校大学生材料成型工艺创新大赛二等奖 (2021.05 - 2021.09) 角色： 主力队员 · 沈阳 成果： 重载卡车传动轴的一种创新设计，全程参与轴的设计，主要负责复合材料的三维模型设计、力学性能模拟以及一部分说明书编写\n专业技能\n💻 编程与计算 熟练使用Linux系统 精通VASP、FPLO等第一性原理计算软件 熟练使用Python语言，并通过该语言搭建了较为完备的数据库网站 🔧 工程软件 熟练使用Procast铸造模拟软件 会熟练使用Abaqus、ANSYS、JMatPro等材料科学模拟分析软件 🎨 设计软件 会熟练使用CAD、UG等绘图建模软件 📚 其他技能 会熟练地查找专业相关的资料、检索文献，有丰富的文书编写和PPT编写经验 荣誉奖项\n东北大学优秀奖学金 (2021-2022) 东北大学优秀团员 (2023) 中国科学技术大学优秀新生奖学金 (2023) 中国科学技术大学优秀奖学金 (2024) 社团和组织经历\n👥 社团元旦晚会主持人 加入了东北大学全明星英语社团，多次成为社团元旦晚会的主持人\n技能证书及其他\n技能： Office、文案撰写 语言： CET-6：475 兴趣爱好： 健身、篮球、乒乓球和羽毛球 作品集\n📱 数据库网站 材料数据库管理系统 网址： http://www.phonon.synl.ac.cn/\n本站名称: 诸葛凯文 网站介绍：人生就像渡过一片大海，到岸时，便各往各的世界去了\u0026hellip; 网站地址：https://jwzhukevin.github.io/\n","permalink":"https://jwzhukevin.github.io/en/about/","summary":"\u003cp\u003e材料科学与工程专业硕士研究生，专注于非线性霍尔效应研究和材料数据库开发\u0026hellip;\u003c/p\u003e","title":"🙋🏻‍♂️ 朱佳文"},{"content":"WannierTools 是一款专注于拓扑材料研究的开源软件，适用于计算材料的电子结构和拓扑性质。\n以强拓扑绝缘体 Bi2Se3 为例，在研究它的性质时，通常需要使用 VASP 进行 DFT 计算，之后就需要使用 wannier90 进行紧束缚的计算，最后就需要使用 WannierTools 对其拓扑性质进行分析，比如拓扑数、表面态和表面自旋。\n所以需要知道 WannierTools 这个工具的安装是必要的步骤。\n这里默认是在 LInux 系统下进行操作，没办法我目前是 Ubuntu 系统，其他的平台和系统我目前还不了解。\n环境安装 WannierTools 的很多计算需要特定的加速才比较优秀，环境安装是比较重要的一步，这里引用官方文档，在 Installation of WannierTools (Linux or Mac)中，需要准备好的库有：\n“Installation” You need to install the following (mandatory) packages:\nFortran compiler (Gfortran or ifort)\nMPICH version higher than 2.1.5\nLapack and Blas library, (Intel MKL recommended)\nArpack-ng\n当然，随着时间的推移（现在是2024年），其中的需要安装的库或者依赖都会变化。\nFortran compiler 你需要知道你现在是否安装了 Fortran compiler\n检查 检查Gfortran或ifort：- 在终端中运行以下命令：\ngfortran --version 或者\nifort -v 如果系统返回版本信息，则表示已安装相应的Fortran编译器。如果没有返回信息，您需要安装Gfortran或Intel Fortran编译器。\n安装 Ubuntu/Debian 系统\n在终端输入\nsudo apt update sudo apt install gfortran gfortran --version 如需要安装特定的版本（例如gfortran-10）\nsudo add-apt-repository ppa:ubuntu-toolchain-r/test sudo apt update sudo apt install gfortran-10 MPICH 检查 在终端中运行以下命令：\nmpiexec --version mpichversion 如果系统返回版本信息，则表示已安装\n安装 Ubuntu/Debian 系统\n准备环境\nsudo apt update sudo apt install build-essential 访问 MPICH 的官方网站，下载最新版本的源代码包，如果可以使用 wget 安装，就输入\nwget http://www.mpich.org/static/downloads/4.3.0/mpich-4.3.0.tar.gz 注意，你需要知道现在最新的版本是哪个，或者你需要哪个版本，4.3.0只是目前写博客时的最新版本。\n之后进行解压：\ntar -xzvf mpich-4.3.0.tar.gz cd mpich-4.3.0 配置安装目录，编译和安装：\n./configure --prefix=/usr/local/mpich-4.3.0\\ make \u0026amp;\u0026amp; sudo make install 一段时间后，需要你耐心等待，之后就需要设置环境变量\necho \u0026#39;export PATH=/usr/local/mpich-4.3.0/bin:$PATH\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc 注意，如果你的路径不一样，你就需要修改 /usr/local/ 为你的安装路径。\n最后，你也可以运行一些示例程序来测试MPICH是否正常工作。进入示例目录并运行测试程序：\ncd examples mpiexec -n 4 ./cpi # 假设cpi是一个示例程序 Intel MKL 这里介绍安装 Intel MKL 是因为他功能更加全面，如果安装过 VASP，过程中就会安装 Intel 的编译环境，对 MKL 应该也不陌生。这个安装就跳过，如果之后没有再添加就说明我比较懒。\nArpack 这个库适用于求解大规模特征值，在计算矩阵时很有用。\nWannierTools 安装 终于到了本体的安装，这一部分安装对于前面来说就比较容易了。\n先看官方安装包里面的文档：\n“Installation” WannierTools is written in Fortran90. Eventually, Fortran compiler is required to install it. At present, we only support the installation on Mac or Linux or other Unix like systems.\nDownload the package a. You can download the latest develop branch by using \u0026ldquo;git clone\u0026rdquo; git clone https://github.com/quanshengwu/wannier_tools.git b. You could also download the release version on page https://github.com/quanshengwu/wannier_tools/releases\nAfter the download, uncompress it if necessary. The source file is included in the src/ folder. The executable binary will be copied to bin/ folder after compilation. There are several examples in the examples/ folder. The symmetrization module is in the wannhr_symm/ folder which is an independent python package.\nGo into the folder src/ for the compilation. We prepared several Makefiles for different usage. Please copy the one that you need into Makefile like\ncp Makefile.intel-mpi Makefile\nModify Makefile a. Choose the lapack and Blas library by setting LIBS. b. if you want to use mpi, please add -DMPI as an option of compiler F90.\nMake it by typing\nmake\nAfter the compilation, binary wt.x will be generated and copied to ../bin/ folder.\nAbout the usage, please visit website www.wanniertools.com\n对，几乎很详细地教会你怎么安装，就怕你哪一步不懂。\n按照官方教程来，几乎不会出错，唯一需要注意的是2024年有一个编译器的弃用。Intel Fortran Compiler Classic（ifort）已被弃用，并将在2024年底停止支持。Intel建议用户尽早迁移到基于LLVM的新编译器（ifx），以获得持续的支持和新功能。这意味着在未来的版本中，ifort将不再可用。\n所以你就需要在 Makefile 里面将 ifort 改为 ifx 以避免之后的出错。\n估计这在之后 WannierTools 会自动更新这个修复，到那时候那就当我没讲了。\n","permalink":"https://jwzhukevin.github.io/en/posts/tools/wanniertools-%E5%AE%89%E8%A3%85/","summary":"\u003cp\u003eWannierTools 是一款专注于拓扑材料研究的开源软件，适用于计算材料的电子结构和拓扑性质。\u003c/p\u003e","title":"WannierTools 安装"},{"content":"在构建网站时，hugo主题下的文件大多数都是 YAML 的文件格式，所以如果想给网站添加一些表情图标，最方便的就是使用可以直接复制进去的 icons，我在这里总结了一些图标，方便之后查找和使用。\n🌟 - Star 🌈 - Rainbow 🍀 - Four Leaf Clover 🎉 - Party Popper 🎨 - Artist Palette ✈️ - Airplane 🌍 - Globe Showing Europe-Africa 🐉 - Dragon 🎶 - Musical Notes 🌸 - Cherry Blossom 🔥 - Fire ⚡ - High Voltage 🍎 - Apple 🦋 - Butterfly 🚀 - Rocket 🏆 - Trophy 🎭 - Performing Arts 🎁 - Wrapped Gift 🌻 - Sunflower 🧩 - Puzzle Piece 🦄 - Unicorn 🏖️ - Beach with Umbrella 🍉 - Watermelon 🧊 - Ice Cube 🏕️ - Camping 🎤 - Microphone 🌊 - Water Wave 🏰 - Castle 📚️ - Books 💡 - Light Bulb 🌼 - Blossom 🚗 - Car 🍕 - Pizza Slice 🥇 - 1st Place Medal 🎬 - Clapper Board 🍩 - Doughnut 🎣 - Fishing Pole 🌌 - Milky Way 🕶️ - Sunglasses 📷 - Camera 🔑 - Key 💖 - Sparkling Heart 🎈 - Balloon 🍓 - Strawberry 🧁 - Cupcake 🔔 - Bell ⚽️ - Soccer Ball 🎸 - Guitar 🌊 - Water Wave 🐾 - Paw Prints 🚴‍♂️- Bicyclist 🔮- Crystal Ball 📅- Calendar ⏳- Hourglass 💻- Laptop 📖- Open Book 🌙- Crescent Moon 🌞- Sun with Face 🍂- Fallen Leaf 🚢- Ship 💼- Briefcase 🧳- Luggage 📦- Package ⚓️- Anchor 🗺️- World Map ✏️- Pencil 🖌️- Paintbrush 📜- Scroll ☂️- Umbrella 🍭- Lollipop 🎠- Carousel Horse 🦚- Peacock 🙈- See-No-Evil Monkey 🐳- Whale 🌵- Cactus ","permalink":"https://jwzhukevin.github.io/en/posts/code_knowledge/colorful-icons-for-yaml-file/","summary":"\u003cp\u003e在构建网站时，hugo主题下的文件大多数都是 YAML 的文件格式，所以如果想给网站添加一些表情图标，最方便的就是使用可以直接复制进去的 icons，我在这里总结了一些图标，方便之后查找和使用。\u003c/p\u003e","title":"Colorful icons for YAML file"},{"content":"我的烦恼 这是目前让我比较恼火的问题，好几次辛辛苦苦编辑好博客准备同步到仓库，到最后输入指令：\ngit push origin master 然后就会等待半分钟，最后毫无例外会显示传输不成功，之后就需要再一次对网页做一点点修改，保证有新内容的变动，之后就重新生成网站，重设仓库地址，同步代码：\ncd .. hugo cd public git remote set-url origin https://github.com/yourusername/yourrepository.git git init git add . git commit -m \u0026#34;some information\u0026#34;（通常是时间） git push origin master 这还不一定成功，就很难受。所以就一直在寻找问题的解决方案。\n重连 下面添加一个断连后重新连接的方法：\ncd .. hugo cd public git remote add origin https://github.com/yourusername/yourrepository.git git remote -v git remote remove origin（取消与远程仓库的连接） git init（初始化仓库） git remote add origin https://github.com/yourusername/yourrepository.git（连接新仓库） git status（检查状态） git branch（检查分支） git checkout br（创建分支）（如果是重连就不需要） git add . git commit -m \u0026#34;some information\u0026#34;（通常是时间） git push origin master/git push -u master（master就是你的分支名字） git checkout main（切换到主分支） git merge br（本地合并） git push（推送到远程） 2025年2月17日发现，重启Git bash，然后对网页内容做一个小修改，重复推送，就可以解决，果然，重启可以解决百分之九十九的问题，其他百分之一可以重启两次。\n稳定的连接 2025年3月12日发现了一种稳定的连接方法，就是设置SSH keys，这是连接主机和Github仓库的稳定的方法，至少目前我在学习Flask同步项目的时候就没有断联过，除非网络设置有问题。\n具体的步骤也是参照了这篇李辉写的Flask入门，我这个小白是货真价实的，之前不知道自己不懂，还不主动学习，所以就在看到这个连接方式后就追悔莫及，其实在这篇文章里面有介绍，但是我还是没有太过注意，希望之后我的的学习可以更加具体且细致。\n具体方法是：\n1.本地密钥生成 来到你要同步的文件夹目录下，先运行：\ncat ~/.ssh/id_rsa.pub 这个命令是为了查看是否在目录下生成了本机的密钥，密钥保存在文件id_rsa.pub里面，需要注意的是，用户根目录的.ssh文件夹，其中可能包含两个文件，id_rsa 和 id_rsa.pub，前者是私钥，不能泄露出去，后者是公钥，用于认证身份，就是我们要保存到 GitHub 上的密钥值。\n当然，如果运行命令后显示没有这个文件No such file or directory，就需要生成SSH密钥：\nssh-keygen 之后有可能会给提示，问你是否要保存到某某文件里面，一般按确认即可，如果需要自定义保存位置（例如避免覆盖已有密钥），输入新路径后回车：\n弹出的问题：\n$ ssh-keygen Generating public/private xxxxxxx key pair. Enter file in which to save the key (~/.ssh/id_xxxxxxx): 然后你可以输入：\n$ ssh-keygen Generating public/private xxxxxxx key pair. Enter file in which to save the key (~/.ssh/id_xxxxxxx): ~/.ssh/id_123456 要注意路径需指向 .ssh 目录，且文件名不要含空格或特殊字符。\n当然有时会提示是否覆盖：\nOverwrite (y/n)? 输入 n 退出，改用其他文件名。\n输入 y 覆盖（仅当确定旧密钥不再需要时）\n之后生成你要的密钥后输入：\ncat ~/.ssh/id_xxxxxxx.pub 就会输出一段密钥，一般开头是\nssh-rsa 复制这个密钥，下一步使用\n2.保存密钥到仓库 登录GitHub，点击头像，点击settings按钮，就弹出添加页面，之后点击New SSH key，就会让你为这个ssh密钥命名并填入密钥，一般要避免名称重复，便于自己辨认。\n最后点击保存\n3.链接 在目录文件夹下输入：\ngit remote add origin git@github.com:your github name/your repository name.git 如果你第一次用Github，你可以去查一下上面语句是什么意思。\n4.使用和自动化 一般而言，这就是正确链接好了，你在修改内容后，就可以按照一下步骤同步了：\ngit init git add . git commit -m \u0026#34;some information\u0026#34;（通常是时间） git push origin master 这里在Ubuntu系统下可以写一个提交的脚本sub.sh，新建文件并打开编辑（注意，下面的命令是在你的文件夹目录下没有sub.sh的文件夹下，同时新建并打开编辑的指令，如果文件存在，会打开现有文件并编辑）：\nvi sub.sh 输入：\n#!/bin/bash # 出错就退出运行 set -e # 生成静态文件 hugo --minify # 进入 public 目录 cd public # 初始化 Git 并提交到仓库 B git init git add . git commit -m \u0026#34;Deploy: $(date)\u0026#34; git push origin master 这就是一个简单的提交脚本。\n但是为了自动化，需要在网页内容设置。\n未完待续\u0026hellip;\u0026hellip;\n","permalink":"https://jwzhukevin.github.io/en/posts/code_knowledge/git-push/","summary":"\u003ch4 id=\"我的烦恼\"\u003e我的烦恼\u003c/h4\u003e\n\u003cp\u003e这是目前让我比较恼火的问题，好几次辛辛苦苦编辑好博客准备同步到仓库，到最后输入指令：\u003c/p\u003e","title":"Git push"},{"content":" ","permalink":"https://jwzhukevin.github.io/en/posts/photos/20241126/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/StvV0jZ/IMG-20241126-073935.jpg\" alt=\"\"  title=\"雪\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/6BdDqbB/IMG-20241126-073841.jpg\" alt=\"\"  title=\"雪\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/NZ5NG4D/IMG-20241126-080154.jpg\" alt=\"\"  title=\"雪\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/86478QQ/IMG-20241126-074003.jpg\" alt=\"\"  title=\"雪\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/nkX8GqF/IMG-20241126-081240.jpg\" alt=\"\"  title=\"雪\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/3yfw07N/IMG-20241126-081530.jpg\" alt=\"\"  title=\"雪\"  /\u003e\n\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/6RYGgG9/IMG-20241126-080200.jpg\" alt=\"\"  title=\"雪\"  /\u003e\n\u003c/p\u003e","title":"2024沈阳第一场雪"},{"content":"晚上说是在下雪，可是没下\n明天开始阵雪\n","permalink":"https://jwzhukevin.github.io/en/posts/life/%E4%BB%8A%E5%A4%A9%E6%99%9A%E4%B8%8A%E4%B8%8B%E9%9B%AA%E4%BA%86/","summary":"\u003cp\u003e晚上说是在下雪，可是没下\u003c/p\u003e","title":"今天晚上下雪了"},{"content":"今天的内容一大部分不在网站上，在于折腾评论区的构建上面。昨晚没有完全构建好评论区，而是在平板上再次部署 Zeabur 之后才好用，但是每次只有一天的额度。\n1.为 Github 完成二次身份验证 具体可以看我的这篇文章，这篇文章也是我今天的更新之一。总之是在使用 edge 的扩展，扫码功能一开始出错，只能用密钥，使用了一次密钥之后再次验证就可以扫码了。\n2.修改好了底部网站运行时间的错误 之前底部的运行时间和首页介绍页面的时间调用参数是不一样的，原代码是原始的调用参数，而我在加入新的参数后，把原始调用参数弄混了，所以出现了错误。\n总之，hugo 里面的参数调用似乎是在 yml 文件里面调用过后，再在 hmtl 网页文件里面调用就会失去数值，好像是会被归零，同样的一个数值用两个字符来储存就可以解决。\n3.给添加的几个导航介绍栏丰富规整了一下内容 主要就是参照原来的介绍页的内容来的，没有什么可以值得讲的。\n4.给每个文章添加了预览图片 之前一直不知道在原来的博客模板里面有这个功能，是在昨天用平板浏览网页的时候发现的，平板浏览博客封面会展示图片错误，所以今天特地在网络上找了一些图片，用于标识博文的类型或者是主要内容。\n目前已经写了四篇网站更新日记了，我觉得这比较有意义，可以准时总结我学到的内容。\n但是，我担心自己会把这个当做是任务，反而适得其反，所以以后摸鱼的日子会更多，更新频率可以放缓，因为内容实在是比较少，但是每一次都会完整地更新，次要的细节就可以忽略，主要的功能添加什么的就可以按教程的形式来，每一次的建站日记就是阶段性的总结。\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20241123/","summary":"\u003cp\u003e今天的内容一大部分不在网站上，在于折腾评论区的构建上面。昨晚没有完全构建好评论区，而是在平板上再次部署 Zeabur 之后才好用，但是每次只有一天的额度。\u003c/p\u003e","title":"Website Building Diary-20241123"},{"content":"2023 年开始，你只要开始向 Github 上传你的项目和代码，官方就要求你进行 Github 2FA ( Two-Factor Authentication / 双重因素认证) ，这是为了保证每个创作者的代码安全，也可以提醒每一位创作者自己的账号安全。\n其实 其实官方的帮助文档里面的方法已经很详细了，这里也有很多教程：\n[Github实战]双重认证2FA 如何 设置/更改[手把手][2022]\ngithub 2fa 中国区认证解决-备忘录\n要在GitHub上实现双重身份验证（2FA），可以按照以下步骤进行设置：\n设置双重身份验证的步骤 登录GitHub：\n访问 GitHub 并登录您的账户。 进入设置：\n点击右上角的头像，选择 “Settings”（设置）。 选择密码和身份验证：\n在左侧菜单中，找到并点击“Password and authentication”（密码和身份验证）。 启用双重认证：\n在“双重认证”部分，点击“Enable two-factor authentication”（启用双重认证）。 选择认证方式：\nGitHub提供多种方式进行双重认证，包括使用短信、GitHub App或TOTP（基于时间的一次性密码）应用。推荐使用TOTP应用，因为它更安全。 生成绑定二维码：\nGitHub会显示一个二维码，您可以使用TOTP应用（如Google Authenticator或Microsoft Authenticator）扫描此二维码。二维码中包含了生成验证码所需的密钥。 输入验证码：\n扫描二维码后，TOTP应用将生成一个六位数字的验证码。将该验证码输入GitHub的验证页面，并点击“Verify code”（验证代码）。 保存恢复代码：\n一旦双重认证成功启用，GitHub会提供一组恢复代码。请务必将这些代码保存在安全的地方，以便在无法访问TOTP应用时使用。 完成设置：\n点击 “Done”（完成）以结束设置过程。 注意事项 使用浏览器扩展是比较方便的，浏览器扩展的GIthub项目，目前支持 Edge 和 Google ，使用时直接扫码就可以，我在第一次验证时扫码总是不成功，就可以使用密钥（仔细阅读提供的文字内容），效果都是一样的。\n支持2FA的应用程序 Google Authenticator\n平台：iOS, Android 特点：生成基于时间的一次性密码（TOTP），简单易用，广泛兼容各种服务。 Authy\n平台：iOS, Android, Desktop 特点：支持多设备同步，提供备份功能，用户界面友好，支持多种服务。 TOTP Authenticator\n平台：iOS, Android\n特点：生成一次性验证码，支持云同步和多账户管理，兼容大多数提供2FA的服务，如GitHub、Google、Facebook等\nMicrosoft Authenticator\n平台：iOS, Android 特点：除了生成TOTP，还支持推送通知和密码管理功能，适合使用Microsoft服务的用户。 LastPass Authenticator\n平台：iOS, Android 特点：与LastPass密码管理器集成，支持TOTP和推送通知，便于管理多个账户。 FreeOTP\n平台：iOS, Android 特点：开源应用程序，简单且安全，支持TOTP和HOTP。 Duo Mobile\n平台：iOS, Android 特点：企业级安全解决方案，支持TOTP和推送通知，适合企业用户使用。 但是啊\n使用 app 的方式对于我来说是劝退的，因为我的手机上这些软件都装不了，应该是因为我太菜了。\n再说一句，如果你本身有国外的号码，那就更方便了，因为直接可以验证码验证，但是如果你没有，就按本文介绍的方法来吧，祝好。\n","permalink":"https://jwzhukevin.github.io/en/posts/code_knowledge/github-2fa%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/","summary":"\u003cp\u003e2023 年开始，你只要开始向 Github 上传你的项目和代码，官方就要求你进行 Github 2FA ( Two-Factor Authentication / 双重因素认证) ，这是为了保证每个创作者的代码安全，也可以提醒每一位创作者自己的账号安全。\u003c/p\u003e","title":"Github-2FA简单教程"},{"content":"今天算是解决了评论的功能，查询了备案的相关信息，加了头部导航栏\n1.评论的功能 在搭建这个网站的时候，我的博客搭建经验 | 有意栽花花满枝是我主要的参考博文，但是博主在里面的评论功能的添加需要用到 Vercel 部署，而 Vercel 部署的默认域名 *.vercel.app 在中国大陆访问速度较慢甚至无法访问，只有绑定自己的域名才可以提高访问速度。博主有自己的域名，但是我没有，所以按照教学视频来部署之后没有成功，最后显示一切连接都没问题，就是链接不可用。回忆起来页面应该是显示了503的错误。\n所以想尝试 hugging face 来部署，发现他的邮箱功能有点问题，所以最后还是看到了Zeabur 部署，Zeabur 部署和 Vercel 以及 hugging face 要创建 MongoDB，不创建 MongoDB 也能正常使用，但重新部署后数据会丢失！\nMongoDB 的部署就是需要生成value，key的统一名称都是 [MONGODB_URI](云函数部署 | Twikoo 文档)，所以他的 value 需要记住，具体可以参考教学视频。\n登录 MongoDB 的部署首先需要[登录](MongoDB 的部署)，没有账号需要用邮箱注册，在邮箱验证后就可以使用注册的邮箱登录。\n新建Cluster 在 MongoDB 上新建一个Cluster，值得注意的是，在 MongoDB 上新建第一个项目是可以选择免费的选项，第二个就不行了，具体原因可能是网站的服务性的需求。Provider 选择 aws ，Region 尽量选择香港。详细看教学视频吧，视频是在 B 站上的，虽然是 2022 年的教程，但在写博文的 2024 年依旧可用。\n链接 最后就是和各大服务平台了链接，基本上都在这里总结了[云部署](云函数部署 | Twikoo 文档)的方案，目前我还尝试出来那个比较好，试过的有 Vercel、hugging face以及 Zeabur，最后只有 Zeabur搭建起来可以用，但是每次搭建起来一天后机会自动删除：\n[该服务](云函数部署 | Twikoo 文档)可能会被中止运行，而且现在的方案只支持部署静态网页，该服务使用的是容器化部署方式。\n请升级到开发者方案或团队方案来继续部署该服务，否则该服务将会被中止。\n所以最后他能持续多久我不太清楚，但是用起来还可以，可能是我千辛万苦终于构建出正常可用的评论区的错觉，但是总算是有这个功能了。\n2.网站备案的信息 网站备案目前我查询来看本网站还是这个域名诸葛凯文，所以可以不用备案，但是我还是需要找时间绑定使用国内的云服务，比如腾讯云和阿里云，这才比较合规。\n3.网页导航栏 网页导航栏我添加了一个栏目，用来快捷导航到我感兴趣的博主那。\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20241122/","summary":"\u003cp\u003e今天算是解决了评论的功能，查询了备案的相关信息，加了头部导航栏\u003c/p\u003e","title":"Website Building Diary-20241122"},{"content":"","permalink":"https://jwzhukevin.github.io/en/collection/","summary":"\u003cp style=\"font-size: 36px;font-weight:bold;text-align: left ;font-family:\"sans-serif\" \u003e收藏的博客\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\" \u003e阮一峰的个人网站\u003c/a\u003e\u003c/p\u003e","title":"🌟半日闲"},{"content":"材料计算与设计\n字句\n🐳刷新网页继续阅读🐳\n有意栽花花满枝 本站模版来源 ","permalink":"https://jwzhukevin.github.io/en/friends/","summary":"\u003cp\u003e材料计算与设计\u003c/p\u003e\n\u003cp style=\"font-size: 24px; font-weight: bold; text-align: left; font-family: 'sans-serif';\"\u003e字句\u003c/p\u003e","title":"🌿还故人"},{"content":" ","permalink":"https://jwzhukevin.github.io/en/posts/photos/20241121/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/xC668bC/c515bd70566ec7ef9ad4445b319564d.jpg\" alt=\"\"  title=\"早晨\"  /\u003e\n\u003cbr\u003e\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/dmTbK5V/1b6edb44b7a1c2b74ab6b56b0cd271d.jpg\" alt=\"\"  title=\"月亮\"  /\u003e\n\u003cbr\u003e\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/sWXJMXN/61dcd4ccf7115fbbf6e1515c5e8ec6d.jpg\" alt=\"\"  title=\"夜晚的云\"  /\u003e\n\u003cbr\u003e\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/nbBnJ8Y/d28205ca1ec4388d5b887b7055e2138.jpg\" alt=\"\"  title=\"月亮\"  /\u003e\n\u003cbr\u003e\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/wrbhTmG/755f89fb330b750bc2960b212aae09c.jpg\" alt=\"\"  title=\"月亮\"  /\u003e\n\u003cbr\u003e\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/48XjTYC/0b847d6b541a8d95b51691961db71e6.jpg\" alt=\"\"  title=\"月亮\"  /\u003e\n\u003cbr\u003e\u003c/p\u003e","title":"早晨的随手拍和这几天的月亮"},{"content":"今天的修改比较杂，我尽量一项一项回忆，顺序应该会比较乱。\n添加的内容 1.雪花特效 这是我比较喜欢的内容，加上了底部波浪，也修正了新年灯笼的特效，预计在新年加上。推荐使用的特效的网址。\n2.修改顶部导航字眼 修改顶部导航字眼，修改后可以连贯成为诗句，“寻寻觅觅冷冷清清”“读万卷书行万里路”“一江春水向东流”“一介布衣”“迁客骚人”“西出阳关”，后面的“迁客骚人”“西出阳关”是后面特意加上的。\n3.个性化“一介布衣”的内容 “一介布衣”添加了一图一文的阅读的字句。用到的网址工具是韩小韩WebAPI接口，也是之前使用的特效网址，个人比较满意。之后我还想加上下载图片的功能，一想到浏览器大多都自带这个功能，我就没继续添加这个功能了。因为有随机的句子配上随机的图片，应该有不错的效果。\n4.添加了Google Analytics 添加了Google Analytics以监控网站的浏览记录，并且统计活跃度，功能很多，目前了解的很少。教程可以看这个初学者如何使用 Google Analytics 4 [2021 指南]，内容很丰富，唯一担心的是不知道随着时间推移教程会不会过期，暂且如此吧。\n5.更新了网站介绍和主页信息 主页信息：\n欢迎来到诸葛凯文的个人博客！\n内容不确定，目前网站还在构建过程中…\n目前网站已经运行 1 天\n下面是我的一些联系方式。\n值得注意的是在这个过程中我摸索出了修改网站建立时间的地方，但是，不知道怎么修改统计的总的浏览数和评论数，所以就在原来代码上面注释掉了这个部分内容，而且在主页面天数显示正常，建好的网站显示运行0天，可是一到子网页都显示0天，就比较纳闷，底部画横线是我使用了内置计算时间的代码，我特意标注出来。所以就时间可以正常在文章内显示，在子网页的底部注释就会有点错误，之后需要找出问题在哪，并修改。\n6.我在本地建立了内容的备份 就在hugo项目的同级文件夹，这个方法目前看来比较笨，希望有云备份方案。\n很想实现的功能： 1.评论的功能 网站框架的博主有一套比较好用的实现方法，我尽量按他的方法来，目前还没有找到合适的教程，因为博主的教程链接已经失效了。希望不要有人在我的评论区评论，那可都会被那个博主接收到啊。\n2.添加目录的功能 目前还不知道怎么办，我要不在本文实现一下。\nOK，进过努力，完成了。我本以为是要使用付费的Typora，或者是相对好用的VScode，最后发现，搭配好博主的基本主题代码，加上使用MarkText编辑，可以设置标题等级，所见即所得，比较好用。\n3.底部网址的备案 还不知道怎么弄，这个任务我觉得越快越好，我可是守法的好公民。\n4.网页的预览图片 还有一个问题，目前我虽然改好了我也首页的个人头像，但是网页的预览图片在我的火狐浏览器上还是原来博主的图像，之后在找找什么原因。\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20241121/","summary":"\u003cp\u003e今天的修改比较杂，我尽量一项一项回忆，顺序应该会比较乱。\u003c/p\u003e","title":"Website Building Diary-20241121"},{"content":"我的头像 ","permalink":"https://jwzhukevin.github.io/en/posts/photos/20241120/","summary":"\u003cp\u003e我的头像\n\u003cimg loading=\"lazy\" src=\"https://i.ibb.co/1XXmgXF/71b491750e3f0ff5f788352b2724774.jpg\" alt=\"\"  title=\"zjWxm\"  /\u003e\n\u003cbr\u003e\u003c/p\u003e","title":"First photo"},{"content":"建站第一次发博，希望自己可以好好维护网站，开始一段新的旅程。\n这一次建站主要靠copy，并没有什么技术含量，但是也花了我两天时间。\n对网站的主要修改包括：\n1.修改网站名称\n2.添加雪花特效\n3.修改自我介绍\n之前尝试过修改其他内容，比如字体，标签什么的，但是最终出现了问题，最终博文可以正常发出，但是在网页上只能看到标题和基本信息，但点击博文就打不开了\n","permalink":"https://jwzhukevin.github.io/en/posts/website_building_diary/website_building_diary-20241120/","summary":"\u003cp\u003e建站第一次发博，希望自己可以好好维护网站，开始一段新的旅程。\u003cbr\u003e\n这一次建站主要靠copy，并没有什么技术含量，但是也花了我两天时间。\u003cbr\u003e\n对网站的主要修改包括：\u003cbr\u003e\n1.修改网站名称\u003cbr\u003e\n2.添加雪花特效\u003cbr\u003e\n3.修改自我介绍\u003cbr\u003e\n之前尝试过修改其他内容，比如字体，标签什么的，但是最终出现了问题，最终博文可以正常发出，但是在网页上只能看到标题和基本信息，但点击博文就打不开了\u003c/p\u003e","title":"Website Building Diary-20241120"},{"content":"","permalink":"https://jwzhukevin.github.io/en/copyright/","summary":"\u003cp style=\"font-size: 30px;font-weight:bold;text-align: center ;font-family:\"sans-serif\" \u003e♾️ 版权说明 ♾️\u003c/p\u003e","title":""}]